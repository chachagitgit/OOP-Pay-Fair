@page
@model OOP_Fair_Fare.Pages.user_accountModel
@{
    ViewData["Title"] = "User Profile";
    Layout = "_Layout";
    var showDeleteConfirm = TempData["ShowDeleteConfirm"] as bool? ?? false;
    var deleteError = TempData["DeleteError"] as string;
}
@section Styles {
    <link rel="stylesheet" href="/css/user_account.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" integrity="sha512-1ycn6IcaQQ40/MKBW2W4+0V8iIdNv0U+d7gRZnt9+wDTrvE9OQ9z8mNIUlTTMQQKO6oGpCgkFvZ5j8v7Zb1K2A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="icon" href="/images/logo.png" type="image/png">
    <style>
        .popup-overlay {
            position: fixed; top: 0; left: 0; width: 100vw; height: 100vh;
            background: rgba(0,0,0,0.5); display: flex; align-items: center; justify-content: center; z-index: 1000;
        }
        .popup-dialog {
            background: #fff; padding: 2rem; border-radius: 8px; box-shadow: 0 2px 16px rgba(0,0,0,0.2); max-width: 350px; text-align: center;
        }
        .popup-dialog button { margin: 0 0.5rem; }
        .popup-error { color: red; margin-bottom: 1rem; }
    </style>
}

<figure class="logo">
    <a href="/"><img src="/images/logo.png" alt="PayFair Logo"></a>
</figure>

<h1 class="user-profile">User Profile</h1>
<div class="user-pic-container">
    <div class="user-pic">
        <img src="/images/profile.png">
    </div>
    <button class="edit-profile">Edit profile</button>
</div>
<div class="advanced-setting">
    <input type="checkbox" id="dropdown-toggle" class="dropdown-checkbox">
    <label for="dropdown-toggle" class="dropdown-label">Advanced Setting</label>
    <div class="dropdown-container">
        @if (!showDeleteConfirm)
        {
            <form method="post" asp-page-handler="DeleteAccount">
                <button type="submit" name="showConfirm" value="1" class="delete-account-btn">Delete Account</button>
            </form>
        }
    </div>
    <form method="post" asp-page-handler="Logout" style="display:inline;">
        <button type="submit" class="sign-out-btn">
            Sign out
            <i class="fas fa-sign-out-alt"></i>
        </button>
    </form>
</div>

@if (showDeleteConfirm)
{
    <div class="popup-overlay">
        <div class="popup-dialog">
            <h3>Confirm Account Deletion</h3>
            <p>Are you sure you want to delete your account? This action cannot be undone.</p>
            @if (!string.IsNullOrEmpty(deleteError))
            {
                <div class="popup-error">@deleteError</div>
            }
            <form method="post" asp-page-handler="DeleteAccount">
                <input type="hidden" name="confirmDelete" value="1" />
                <button type="submit" class="confirm-btn">Yes, Delete</button>
                <a href="" class="cancel-btn">Cancel</a>
            </form>
        </div>
    </div>
}

<form method="post" asp-page-handler="EditInfo" id="edit-info-form">
    <div class="user-info-container">
        <div class="user-info-row">
            <div class="user-info-item">
                <span class="user-info-label">First Name</span>
                <span class="user-info-value" id="firstname-display">@Model.UserInfo?.FirstName</span>
                <input type="text" class="user-info-input" id="firstname-input" name="FirstName" value="@Model.UserInfo?.FirstName" style="display:none;" />
            </div>
            <div class="user-info-item">
                <span class="user-info-label">Last Name</span>
                <span class="user-info-value" id="lastname-display">@Model.UserInfo?.LastName</span>
                <input type="text" class="user-info-input" id="lastname-input" name="LastName" value="@Model.UserInfo?.LastName" style="display:none;" />
            </div>
        </div>
        <div class="user-info-item">
            <span class="user-info-label">Username</span>
            <span class="user-info-value" id="username-display">@Model.UserInfo?.Username</span>
            <input type="text" class="user-info-input" id="username-input" name="Username" value="@Model.UserInfo?.Username" style="display:none;" />
        </div>
        <div class="user-info-item">
            <span class="user-info-label">Email</span>
            <span class="user-info-value" id="email-display">@Model.UserInfo?.Email</span>
        </div>
    </div>
</form>

<div class="history-container">
    <h3>Your history</h3>
    <table class="history-table">
        <thead>
            <tr>
                <th>Starting Location</th>
                <th>Destination</th>
                <th>Estimated Fare</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        @if (Model.SavedRoutes != null && Model.SavedRoutes.Count > 0)
        {
            foreach (var route in Model.SavedRoutes)
            {
                <tr>
                    <td>@route.StartLocation</td>
                    <td>@route.Destination</td>
                    <td>â‚±@route.EstimatedFare.ToString("F2")</td>
                    <td>
                        <form method="post" asp-page-handler="DeleteRoute">
                            <input type="hidden" name="RouteId" value="@route.Id" />
                            <button class="delete-btn" aria-label="Delete transaction"><i class="fas fa-times"></i></button>
                        </form>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="4">No saved routes.</td></tr>
        }
        </tbody>
    </table>
</div>

<!--transaction confirmation-->
<input type="checkbox" id="transaction-confirm-toggle">
<div class="transaction-confirm-overlay">
    <label for="transaction-confirm-toggle" class="overlay-close"></label>
    <div class="confirmation-dialog">
        <h3>Confirm Transaction Deletion</h3>
        <p>Are you sure you want to delete this transaction? This action cannot be undone.</p>
        <div class="confirmation-buttons">
            <button class="confirm-btn" id="transaction-confirm-btn">Yes, Delete</button>
            <button class="cancel-btn" id="transaction-cancel-btn">Cancel</button>
        </div>
    </div>
</div>

@section Scripts {
<script>
window.addEventListener('DOMContentLoaded', function() {
    // Edit profile logic
    const editButton = document.querySelector('.edit-profile');
    let isEditing = false;

    editButton.addEventListener('click', () => {
        if (isEditing) {
            // validates the input
            const firstname = document.getElementById('firstname-input').value.trim();
            const lastname = document.getElementById('lastname-input').value.trim();
            const username = document.getElementById('username-input').value.trim();

            const nameConstraint = /^[A-Za-z\\s\\-]+$/;

            if (!nameConstraint.test(firstname) || !nameConstraint.test(lastname)) {
                alert("First name and Last name must not contain numbers.");
                return; // Stop saving and stay in editing mode
            }

            // Submit the form to update the database
            document.getElementById('edit-info-form').submit();
            return; // Do not toggle back to view mode, let the server reload the page
        }

        // Toggle to edit mode
        isEditing = true;
        document.getElementById('firstname-display').style.display = 'none';
        document.getElementById('firstname-input').style.display = 'inline';

        document.getElementById('lastname-display').style.display = 'none';
        document.getElementById('lastname-input').style.display = 'inline';

        document.getElementById('username-display').style.display = 'none';
        document.getElementById('username-input').style.display = 'inline';

        editButton.textContent = 'Save';
    });

    // Transaction deletion handling (optional, can be removed if you want Razor-only for this too)
    let rowToDelete = null;

    document.querySelector('.history-table').addEventListener('click', (event) => {
        const deleteBtn = event.target.closest('.delete-btn');
        if (deleteBtn) {
            event.preventDefault();
            // Store reference to the row to be deleted
            rowToDelete = deleteBtn.closest('tr');
            // Show the confirmation dialog
            document.getElementById('transaction-confirm-toggle').checked = true;
        }
    });

    // Confirm transaction deletion
    document.getElementById('transaction-confirm-btn').addEventListener('click', () => {
        if (rowToDelete) {
            rowToDelete.remove();
            rowToDelete = null;
            document.getElementById('transaction-confirm-toggle').checked = false;
        }
    });

    // Cancel transaction deletion
    document.getElementById('transaction-cancel-btn').addEventListener('click', () => {
        document.getElementById('transaction-confirm-toggle').checked = false;
        rowToDelete = null;
    });

    // Close transaction confirmation dialog when clicking outside
    document.querySelector('.transaction-confirm-overlay .overlay-close').addEventListener('click', () => {
        document.getElementById('transaction-confirm-toggle').checked = false;
        rowToDelete = null;
    });

    // Prevent clicks on the dialog from propagating to the overlay-close
    document.querySelector('.transaction-confirm-overlay .confirmation-dialog').addEventListener('click', (event) => {
        event.stopPropagation();
    });
});
</script>
}