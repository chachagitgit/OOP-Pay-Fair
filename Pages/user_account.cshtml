@page
@model OOP_Fair_Fare.Pages.user_accountModel
@{
    ViewData["Title"] = "User Profile";
    Layout = "_Layout";
    var showDeleteConfirm = TempData["ShowDeleteConfirm"] as bool? ?? false;
    var deleteError = TempData["DeleteError"] as string;
}
@section Styles {
    <link rel="stylesheet" href="/css/user_account.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" integrity="sha512-1ycn6IcaQQ40/MKBW2W4+0V8iIdNv0U+d7gRZnt9+wDTrvE9OQ9z8mNIUlTTMQQKO6oGpCgkFvZ5j8v7Zb1K2A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="icon" href="/images/logo.png" type="image/png">
    <style>
        .popup-overlay {
            position: fixed; top: 0; left: 0; width: 100vw; height: 100vh;
            background: rgba(0,0,0,0.5); display: flex; align-items: center; justify-content: center; z-index: 1000;
        }
        .popup-dialog {
            background: #fff; padding: 2.5rem; border-radius: 8px; box-shadow: 0 2px 16px rgba(0,0,0,0.2); max-width: 450px; width: 90%; text-align: center;
        }
        .popup-dialog button { margin: 0.5rem; padding:0.75rem 1.5rem; font: size 14px;}
        .popup-error { color: red; margin-bottom: 1rem; }
        
        /* Dropdown Styles */
        .advanced-setting {
            position: relative;
            margin-top: 350px;
            margin-left: 100px;
            display: inline-block;
            z-index: 100;
        }
        #dropdown-toggle {
            display: none;
        }
        .dropdown-label {
            background: none;
            border: none;
            color: rgba(30, 58, 138, 0.7);
            font-family: 'Poppins', sans-serif;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: color 0.3s ease;
            display: inline-block;
            padding: 5px 0;
            margin-left: 20px;
        }
        .dropdown-label:hover {
            color: rgba(30, 58, 138, 0.9);
            font-weight: 600;
        }
        .dropdown-container {
            position: absolute;
            top: 100%;
            background: rgba(255, 255, 255, 0.95);
            border: 1px solid rgba(30, 58, 138, 0.3);
            border-radius: 8px;
            margin-left: 10px;
            padding: 0;
            overflow: hidden;
            width: 250px;
            height: auto;
            min-height: 60px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transform: translateY(-10px);
            transition: all 0.3s ease;
        }
        #dropdown-toggle:checked ~ .dropdown-container {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }
        .password-form-group {
            margin-bottom: 1rem; text-align: left;
        }
        .password-form-group label {
            display: block; margin-bottom: 0.5rem; font-weight: 500; color: #1e3a8a;
        }
        .password-form-group input {
            width: 100%; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px; box-sizing: border-box; border-radius: 15px;
        }
        .password-form-group input:focus {
            border: #1e3a8a;
        }
        .change-password-btn {
            background: #007bff; color: #1e3a8a;border: none; padding: 0.5rem 1rem; border-radius: 4px; cursor: pointer; margin-bottom: 0.5rem; display: block; width: 100%;
        }
        .popup-dialog h3 {color: #1e3a8a; margin-top: 0; margin-bottom: 2rem; }
        .change-password-btn,
        .delete-account-btn {
            display: block;
            width: 100%;
            margin: 0;
            border: none;
            background: none;
            padding: 10px 12px;
            text-align: center;
            cursor: pointer;
            font-family: 'Poppins', sans-serif;
            font-size: 14px;
            transition: all 0.2s ease;
        }
        .delete-account-btn {
            background: none;
            border: none;
            color: rgba(220, 38, 38, 0.8);
            font-family: 'Poppins', sans-serif;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            width: 100%;
            text-align: center;
            padding: 10px 12px;
            white-space: nowrap;
            transition: all 0.2s ease;
        }
        .delete-account-btn:hover, .change-password-btn:hover {
            font-weight: 600;
        }
        /* Confirmation Dialog Styles */
        #confirmation-toggle {
            display: none;
        }
        .confirmation-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 2000;
            backdrop-filter: blur(5px);
        }
        #confirmation-toggle:checked + .confirmation-overlay {
            display: flex;
        }
        .confirmation-dialog {
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            text-align: center;
            max-width: 400px;
            width: 90%;
            transform: scale(0.9);
            transition: transform 0.3s ease;
        }
        #confirmation-toggle:checked + .confirmation-overlay .confirmation-dialog {
            transform: scale(1);
        }
        .confirmation-dialog h3 {
            margin: 0 0 15px 0;
            color: #1e3a8a;
            font-size: 1.3rem;
        }
        .confirmation-dialog p {
            margin: 0 0 25px 0;
            color: #64748b;
            line-height: 1.5;
        }
        .confirmation-buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
        }
        .confirm-btn, .cancel-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            font-family: 'Poppins', sans-serif;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            min-width: 80px;
        }
        .confirm-btn {
            background: rgba(220, 38, 38, 0.9);
            color: white;
        }
        .confirm-btn:hover {
            background: rgba(220, 38, 38, 1);
            transform: translateY(-2px);
        }
        .cancel-btn {
            background: rgba(107, 114, 128, 0.1);
            color: #374151;
            border: 1px solid rgba(107, 114, 128, 0.3);
        }
        .cancel-btn:hover {
            background: rgba(107, 114, 128, 0.2);
            transform: translateY(-2px);
        }
        /* Close dialog when clicking outside */
        .overlay-close,.popup-overlay{
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            cursor: default;
        }
        .confirmation-dialog {
            position: relative;
            z-index: 1;
        }
        .sign-out-btn {
            margin-top: 80px;
        }
    </style>
}
    <figure class="logo">
        <a href="/"><img src="/images/logo.png" alt="PayFair Logo"></a>
    </figure>

    <h1 class="user-profile">User Profile</h1>
    <div class="user-pic-container">
        <div class="user-pic">
            <img src="/images/profile.png">
        </div>
        <button class="edit-profile">Edit profile</button>
    </div>
    <div class="advanced-setting">
        <input type="checkbox" id="dropdown-toggle" class="dropdown-checkbox">
        <label for="dropdown-toggle" class="dropdown-label">Advanced Setting</label>
        <div class="dropdown-container">
            <button type="button" class="change-password-btn" id='show-password-modal'>Change Password</button>
            @if (!showDeleteConfirm)
            {
                <form method="post" asp-page-handler="DeleteAccount">
                    <button type="submit" name="showConfirm" value="1" class="delete-account-btn">Delete Account</button>
                </form>
            }
        </div>
        <form method="post" asp-page-handler="Logout" style="display:inline;">
            <button type="submit" class="sign-out-btn">
                Sign out
                <i class="fas fa-sign-out-alt"></i>
            </button>
        </form>
    </div>
    <div class="popup-overlay" id="password-modal" style="display: none;">
        <div class="popup-dialog">
            <h3>Change Password</h3>
            <form id="password-form">
                <div class="password-form-group">
                    <label for="currentPassword">Current Password</label>
                    <input type="password" id="currentPassword" name="CurrentPassword" required />
                </div>
                <div class="password-form-group">
                    <label for="newPassword">New Password</label>
                    <input type="password" id="newPassword" name="NewPassword" required />
                </div>
                <div class="password-form-group">
                    <label for="confirmPassword">Confirm New Password</label>
                    <input type="password" id="confirmPassword" name="ConfirmPassword" required />
                </div>
                <button type="submit" class="confirm-btn">Change Password</button>
                <button type="button" class="cancel-btn" id="cancel-password">Cancel</button>
            </form>
        </div>
    </div>
    @if (showDeleteConfirm)
    {
        <div class="popup-overlay">
            <div class="popup-dialog">
                <h3>Confirm Account Deletion</h3>
                <p>Are you sure you want to delete your account? This action cannot be undone.</p>
                @if (!string.IsNullOrEmpty(deleteError))
                {
                    <div class="popup-error">@deleteError</div>
                }
                <form method="post" asp-page-handler="DeleteAccount">
                    <input type="hidden" name="confirmDelete" value="1" />
                    <button type="submit" class="confirm-btn">Yes, Delete</button>
                    <a href="" class="cancel-btn">Cancel</a>
                </form>
            </div>
        </div>
    }

    <form method="post" asp-page-handler="EditInfo" id="edit-info-form">
        <div class="user-info-container">
            <div class="user-info-row">
                <div class="user-info-item">
                    <span class="user-info-label">First Name</span>
                    <span class="user-info-value" id="firstname-display">@Model.UserInfo?.FirstName</span>
                    <input type="text" class="user-info-input" id="firstname-input" name="FirstName" value="@Model.UserInfo?.FirstName" style="display:none;" />
                </div>
                <div class="user-info-item">
                    <span class="user-info-label">Last Name</span>
                    <span class="user-info-value" id="lastname-display">@Model.UserInfo?.LastName</span>
                    <input type="text" class="user-info-input" id="lastname-input" name="LastName" value="@Model.UserInfo?.LastName" style="display:none;" />
                </div>
            </div>
            <div class="user-info-item">
                <span class="user-info-label">Username</span>
                <span class="user-info-value" id="username-display">@Model.UserInfo?.Username</span>
                <input type="text" class="user-info-input" id="username-input" name="Username" value="@Model.UserInfo?.Username" style="display:none;" />
            </div>
            <div class="user-info-item">
                <span class="user-info-label">Email</span>
                <span class="user-info-value" id="email-display">@Model.UserInfo?.Email</span>
            </div>
        </div>
    </form>

    <div class="history-container">
        <h3>Your history</h3>
        <table class="history-table">
            <thead>
                <tr>
                    <th>Starting Location</th>
                    <th>Destination</th>
                    <th>Estimated Fare</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            @if (Model.SavedRoutes != null && Model.SavedRoutes.Count > 0)
            {
                foreach (var route in Model.SavedRoutes)
                {
                    <tr>
                        <td>@route.StartLocation</td>
                        <td>@route.Destination</td>
                        <td>₱@route.EstimatedFare.ToString("F2")</td>
                        <td>
                            <form method="post" asp-page-handler="DeleteRoute">
                                <input type="hidden" name="RouteId" value="@route.Id" />
                                <button class="delete-btn" aria-label="Delete transaction"><i class="fas fa-times"></i></button>
                            </form>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="4">No saved routes.</td></tr>
            }
            </tbody>
        </table>
    </div>
    <!--transaction confirmation-->
    <input type="checkbox" id="transaction-confirm-toggle">
    <div class="transaction-confirm-overlay">
        <label for="transaction-confirm-toggle" class="overlay-close"></label>
        <div class="confirmation-dialog">
            <h3>Confirm Transaction Deletion</h3>
            <p>Are you sure you want to delete this transaction? This action cannot be undone.</p>
            <div class="confirmation-buttons">
                <button class="confirm-btn" id="transaction-confirm-btn">Yes, Delete</button>
                <button class="cancel-btn" id="transaction-cancel-btn">Cancel</button>
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
        window.addEventListener('DOMContentLoaded', function() {
            // Edit profile logic
            const editButton = document.querySelector('.edit-profile');
            let isEditing = false;

            editButton.addEventListener('click', () => {
                if (isEditing) {
                    // validates the input
                    const firstname = document.getElementById('firstname-input').value.trim();
                    const lastname = document.getElementById('lastname-input').value.trim();
                    const username = document.getElementById('username-input').value.trim();

                    const nameConstraint = /^[A-Za-z\\s\\-]+$/;

                    if (!nameConstraint.test(firstname) || !nameConstraint.test(lastname)) {
                        alert("First name and Last name must not contain numbers.");
                        return; // Stop saving and stay in editing mode
                    }

                    // Submit the form to update the database
                    document.getElementById('edit-info-form').submit();
                    return; // Do not toggle back to view mode, let the server reload the page
                }

                // Toggle to edit mode
                isEditing = true;
                document.getElementById('firstname-display').style.display = 'none';
                document.getElementById('firstname-input').style.display = 'inline';

                document.getElementById('lastname-display').style.display = 'none';
                document.getElementById('lastname-input').style.display = 'inline';

                document.getElementById('username-display').style.display = 'none';
                document.getElementById('username-input').style.display = 'inline';

                editButton.textContent = 'Save';
            });
            // Show/Hide password modal
            const showPasswordModal = document.getElementById('show-password-modal');
            const passwordModal = document.getElementById('password-modal');
            const cancelPassword = document.getElementById('cancel-password');
            const passwordForm = document.getElementById('password-form');

            showPasswordModal.addEventListener('click', () => {
                passwordModal.style.display = 'flex';
            });

            cancelPassword.addEventListener('click', () => {
                passwordModal.style.display = 'none';
                passwordForm.reset();
            });

            // Close modal when clicking outside
            passwordModal.addEventListener('click', (e) => {
                if (e.target === passwordModal) {
                    passwordModal.style.display = 'none';
                    passwordForm.reset();
                }
            });

            // Password form validation (client-side only)
            passwordForm.addEventListener('submit', function(e) {
                e.preventDefault(); // Prevent actual form submission
                
                const currentPassword = document.getElementById('currentPassword').value;
                const newPassword = document.getElementById('newPassword').value;
                const confirmPassword = document.getElementById('confirmPassword').value;
                
                if (!currentPassword || !newPassword || !confirmPassword) {
                    alert('All password fields are required.');
                    return;
                }
                
                if (newPassword !== confirmPassword) {
                    alert('New password and confirm password do not match.');
                    return;
                }
                
                if (newPassword.length < 6) {
                    alert('New password must be at least 6 characters long.');
                    return;
                }
                
                // Simulate successful password change
                alert('Password would be changed successfully! (UI only - no backend logic)');
                passwordModal.style.display = 'none';
                passwordForm.reset();
            });

            // Transaction deletion handling (optional, can be removed if you want Razor-only for this too)
            let rowToDelete = null;

            document.querySelector('.history-table').addEventListener('click', (event) => {
                const deleteBtn = event.target.closest('.delete-btn');
                if (deleteBtn) {
                    event.preventDefault();
                    // Store reference to the row to be deleted
                    rowToDelete = deleteBtn.closest('tr');
                    // Show the confirmation dialog
                    document.getElementById('transaction-confirm-toggle').checked = true;
                }
            });

            // Confirm transaction deletion
            document.getElementById('transaction-confirm-btn').addEventListener('click', () => {
                if (rowToDelete) {
                    rowToDelete.remove();
                    rowToDelete = null;
                    document.getElementById('transaction-confirm-toggle').checked = false;
                }
            });

            // Cancel transaction deletion
            document.getElementById('transaction-cancel-btn').addEventListener('click', () => {
                document.getElementById('transaction-confirm-toggle').checked = false;
                rowToDelete = null;
            });

            // Close transaction confirmation dialog when clicking outside
            document.querySelector('.transaction-confirm-overlay .overlay-close').addEventListener('click', () => {
                document.getElementById('transaction-confirm-toggle').checked = false;
                rowToDelete = null;
            });

            // Prevent clicks on the dialog from propagating to the overlay-close
            document.querySelector('.transaction-confirm-overlay .confirmation-dialog').addEventListener('click', (event) => {
                event.stopPropagation();
            });
        });
        </script>
    }