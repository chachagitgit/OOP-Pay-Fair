@page
@model OOP_Fair_Fare.Pages.user_accountModel
@{
    ViewData["Title"] = "User Profile";
    Layout = "_Layout";
    var showDeleteConfirm = TempData["ShowDeleteConfirm"] as bool? ?? false;
    var deleteError = TempData["DeleteError"] as string;
}
@section Styles {
    <link rel="stylesheet" href="css/user_account.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" integrity="sha512-1ycn6IcaQQ40/MKBW2W4+0V8iIdNv0U+d7gRZnt9+wDTrvE9OQ9z8mNIUlTTMQQKO6oGpCgkFvZ5j8v7Zb1K2A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="icon" href="/images/logo.png" type="image/png"> <!--favicon-->
}
    <!-- Navigation to dashboard-->
    <a href="/ffDashboard" class="navigate-map-btn">Navigate to map<i class="fas fa-map"></i></a>
    <!--app logo-->
    <figure class="logo">
        <a href="/"><img src="/images/logo.png" alt="PayFair Logo"></a>
    </figure>

    <!-- main page heading-->
    <h1 class="user-profile">User Profile</h1>
    <div class="user-pic-container">
        <div class="user-pic"> <!-- User avatar -->
            <img src="/images/profile.png">
        </div>
        <!-- Edit profile button (toggles edit mode) -->
        <button class="edit-profile">Edit profile</button>
        <div class="advanced-setting">
            <!-- Checkbox for dropdown toggle -->
            <input type="checkbox" id="dropdown-toggle" class="dropdown-checkbox">
            <label for="dropdown-toggle" class="dropdown-label">
                Advanced Setting
                <i class="fas fa-chevron-down dropdown-icon"></i>
                </label>
            <!-- Dropdown menu items -->
            <div class="dropdown-container">
                <!-- Change password button (opens modal) -->
                <button type="button" class="change-password-btn" id='show-password-modal'>Change Password</button>
                  <!-- Delete account button (only shown if not in confirmation state) -->
                @if (!showDeleteConfirm)
                {
                    <form method="post" asp-page-handler="DeleteAccount">
                        <button type="submit" name="showConfirm" value="1" class="delete-account-btn">Delete Account</button>
                    </form>
                }
            </div>
        </div>
        <!-- Sign out form -->
        <form method="post" asp-page-handler="Logout">
            <button type="submit" class="sign-out-btn">
                Sign out
                <i class="fas fa-sign-out-alt"></i>
            </button>
        </form>
    </div>
    
    <!-- change password button in advanced settings-->
    <div class="popup-overlay" id="password-modal" style="display: none;">
        <div class="popup-dialog"> <!--show dialog for changing password-->
            <h3>Change Password</h3>
            @if (!string.IsNullOrEmpty(Model.StatusMessage))
            {
                <div class="alert alert-info">@Model.StatusMessage</div>
            }
            <form id="password-form" method="post" asp-page-handler="ChangePassword">
                @Html.AntiForgeryToken()
                <!-- Current password field -->
                <div class="password-form-group">
                    <label for="currentPassword">Current Password</label>
                    <input type="password" id="currentPassword" asp-for="CurrentPassword" required minlength="6"/>
                    <a href="/forgotPass" class="forgot-password-link">Forgot your password?</a>
                </div>
                <!-- New password field with pattern matching for confirmation -->
                <div class="password-form-group">
                    <label for="newPassword">New Password</label>
                    <input type="password" id="newPassword" asp-for="NewPassword" required minlength="6" oninput="document.getElementById('confirmPassword').pattern = this.value.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');"/>
                </div>
                <div class="password-form-group"> <!-- Confirm new password field -->
                    <label for="confirmPassword">Confirm New Password</label>
                    <input type="password" id="confirmPassword" asp-for="ConfirmNewPassword" required minlength="6" title="Passwords must match"/>
                    <span class="error-message" id="confirm-password-error">Passwords do not match</span>
                </div>
                <!-- Modal action buttons -->
                <button type="submit" class="confirm-btn">Change Password</button>
                <button type="button" class="cancel-btn" id="cancel-password">Cancel</button>
            </form>
        </div>
    </div>
    <!-- Delete Account Confirmation Dialog (shown conditionally) -->
    @if (showDeleteConfirm)
    {
        <div class="popup-overlay">
            <div class="popup-dialog">
                <h3>Confirm Account Deletion</h3>
                <p>Are you sure you want to delete your account? This action cannot be undone.</p>
                <!-- Display delete error if any -->
                @if (!string.IsNullOrEmpty(deleteError))
                {
                    <div class="popup-error">@deleteError</div>
                }
                <!-- Final confirmation form -->
                <form method="post" asp-page-handler="DeleteAccount">
                    <input type="hidden" name="confirmDelete" value="1" />
                    <button type="submit" class="confirm-btn">Yes, Delete</button>
                    <a href="" class="cancel-btn">Cancel</a>
                </form>
            </div>
        </div>
    }
    <!-- User Information Edit Form -->
    <form method="post" asp-page-handler="EditInfo" id="edit-info-form">
        <div class="user-info-container">
            <div class="user-info-row"> <!-- First and Last Name Row -->
                <div class="user-info-item">
                    <span class="user-info-label">First Name</span>
                    <span class="user-info-value" id="firstname-display">@Model.UserInfo?.FirstName</span>
                    <input type="text" class="user-info-input" id="firstname-input" name="FirstName" value="@Model.UserInfo?.FirstName" style="display:none;" />
                </div>
                <div class="user-info-item"> <!-- Last Name field (display/edit toggle) -->
                    <span class="user-info-label">Last Name</span>
                    <span class="user-info-value" id="lastname-display">@Model.UserInfo?.LastName</span>
                    <input type="text" class="user-info-input" id="lastname-input" name="LastName" value="@Model.UserInfo?.LastName" style="display:none;" />
                </div>
            </div>
            <div class="user-info-item"> <!-- Username field (display/edit toggle) -->
                <span class="user-info-label">Username</span>
                <span class="user-info-value" id="username-display">@Model.UserInfo?.Username</span>
                <input type="text" class="user-info-input" id="username-input" name="Username" value="@Model.UserInfo?.Username" style="display:none;" />
            </div>
            <div class="user-info-item"> <!-- Email field (read-only display) -->
                <span class="user-info-label">Email</span>
                <span class="user-info-value" id="email-display">@Model.UserInfo?.Email</span>
            </div>
        </div>
    </form>
    <!-- User History Section -->
    <div class="history-container">
        <h3>Your History</h3>
        <!-- Saved routes table -->
        <table class="history-table">
            <thead>
                <tr>
                    <th>Starting Location</th>
                    <th>Destination</th>
                    <th>Vehicle</th>
                    <th>Regular Fare</th>
                    <th>Applied Discount</th>
                    <th>Distance</th>
                    <th>Total Estimated Fare</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <!-- Display saved routes if any exist -->
            @if (Model.SavedRoutes != null && Model.SavedRoutes.Count > 0)
            {
                foreach (var route in Model.SavedRoutes)
                {
                    <tr>
                        <td>@route.StartLocation</td>
                        <td>@route.Destination</td>
                        <td>@route.Vehicle</td>
                        <td>₱@route.RegularFare.ToString("F2")</td>
                        <td>₱@route.AppliedDiscount.ToString("F2")</td>
                        <td>@route.Distance.ToString("F2") km</td>
                        <td>₱@route.EstimatedFare.ToString("F2")</td>
                        <td>
                            <!-- Delete route form with confirmation -->
                            <form method="post" asp-page-handler="DeleteRoute" style="display:inline;">
                                <input type="hidden" name="RouteId" value="@route.Id" />
                                <button class="delete-btn" aria-label="Delete transaction" onclick="return confirm('Are you sure you want to delete this route?');"><i class="fas fa-times"></i></button>
                            </form>
                        </td>
                    </tr>
                }
            }
            else
            {
                <!-- No routes message -->
                <tr><td colspan="8">No saved routes.</td></tr>
            }
            </tbody>
        </table>
    </div>
    <!--transaction confirmation-->
    <input type="checkbox" id="transaction-confirm-toggle">
    <div class="transaction-confirm-overlay">
        <label for="transaction-confirm-toggle" class="overlay-close"></label>
        <div class="confirmation-dialog">
            <h3>Confirm Transaction Deletion</h3>
            <p>Are you sure you want to delete this transaction? This action cannot be undone.</p>
            <div class="confirmation-buttons">
                <button class="confirm-btn" id="transaction-confirm-btn">Yes, Delete</button>
                <button class="cancel-btn" id="transaction-cancel-btn">Cancel</button>
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
        window.addEventListener('DOMContentLoaded', function() {
            // Edit profile logic
            const editButton = document.querySelector('.edit-profile');
            let isEditing = false; // Track current edit state

            editButton.addEventListener('click', () => {
                if (isEditing) {
                    // save mode:  validates the input
                     // Get input values and trim whitespace
                    const firstname = document.getElementById('firstname-input').value.trim();
                    const lastname = document.getElementById('lastname-input').value.trim();
                    const username = document.getElementById('username-input').value.trim();
                    // Regex pattern: only letters, spaces, and hyphens allowed
                    const nameConstraint = /^[A-Za-z\\s\\-]+$/;
                    // Validate first and last names
                    if (!nameConstraint.test(firstname) || !nameConstraint.test(lastname)) {
                        alert("First name and Last name must not contain numbers.");
                        return; // Stop saving and stay in editing mode
                    }

                    // Submit the form to update the database
                    document.getElementById('edit-info-form').submit();
                    return; //let the server reload the page
                }

                // EDIT MODE: Switch to input fields
                isEditing = true;
                // Hide display spans and show input fields
                document.getElementById('firstname-display').style.display = 'none';
                document.getElementById('firstname-input').style.display = 'inline';

                document.getElementById('lastname-display').style.display = 'none';
                document.getElementById('lastname-input').style.display = 'inline';

                document.getElementById('username-display').style.display = 'none';
                document.getElementById('username-input').style.display = 'inline';
                // Change button text to indicate save action
                editButton.textContent = 'Save';
            });
            // Show/Hide password modal
            const showPasswordModal = document.getElementById('show-password-modal');
            const passwordModal = document.getElementById('password-modal');
            const cancelPassword = document.getElementById('cancel-password');
            const passwordForm = document.getElementById('password-form');

            // Show password modal when button is clicked
            showPasswordModal.addEventListener('click', () => {
                passwordModal.style.display = 'flex';
            });
            // Hide modal and reset form when cancel is cli
            cancelPassword.addEventListener('click', () => {
                passwordModal.style.display = 'none';
                passwordForm.reset();
            });

            // Close modal when clicking outside
            passwordModal.addEventListener('click', (e) => {
                if (e.target === passwordModal) {
                    passwordModal.style.display = 'none';
                    passwordForm.reset();
                }
            });

            // Password form validation
            passwordForm.addEventListener('submit', function(e) {
                // Get form values
                const currentPassword = document.getElementById('currentPassword').value;
                const newPassword = document.getElementById('newPassword').value;
                const confirmPassword = document.getElementById('confirmPassword').value;
                
                // Client-side validation
                if (!currentPassword || !newPassword || !confirmPassword) {
                    e.preventDefault();
                    alert('All password fields are required.');
                    return;
                }
                
                if (newPassword !== confirmPassword) {
                    e.preventDefault();
                    alert('New password and confirm password do not match.');
                    return;
                }
                
                if (newPassword.length < 6) {
                    e.preventDefault();
                    alert('New password must be at least 6 characters long.');
                    return;
                }
                
                // If we get here, allow the form to submit to the server
                return true;
            });
        });
        </script>
    }