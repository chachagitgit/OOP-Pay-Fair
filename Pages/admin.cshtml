@page
@model OOP_Fair_Fare.Pages.adminModel
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Admin";
    Layout = "_Layout";
}
@section Styles{
    <link rel="stylesheet" href="~/css/admin.css" />
}

<form method="post">
    @Html.AntiForgeryToken()
</form>

<div class="header-card">
        <a href="/ffDashboard" class="navigate-map-btn">Navigate to map<i class="fas fa-map"></i></a>
        <a href="/ffDashboard"><div class="logo" style="cursor:pointer;"></div></a>

        <div class="profile-section">
            <!-- Left: Avatar and Edit Button -->
            <div class="profile-left">
                <div class="admin-title">ADMINISTRATOR</div>
                <div class="profile-avatar"></div>
                <div class="button-container">
                    <form method="post" asp-page-handler="Logout" style="display:inline;">
                        <button type="submit" class="btn btn-logout">Log Out</button>
                    </form>
                </div>
            </div>

            <!-- Right: Info -->
            <div class="admin-info">
                <div class="form-group">
                    <div class="form-field">
                        <label>First Name</label>
                        <input type="text" id="firstName" value="PayFair" disabled>
                    </div>
                    <div class="form-field">
                        <label>Last Name</label>
                        <input type="text" id="lastName" value="Admin" disabled>
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-field full-width">
                        <label>Username</label>
                        <input type="text" id="username" value="admin" disabled>
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-field full-width">
                        <label>Email</label>
                        <input type="email" id="email" value="payfairadmin@gmail.com" disabled>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="fare-section">
            <div class="fare-tabs">
                <div class="fare-header vehicle-header">Vehicle Type</div>
                    <div class="fare-header fare-values">
                        <div class="fare-header fare-values">
                            <div>Base Fare <span class="info-icon" title="The minimum charge to the commuter for a ride">ⓘ</span></div>
                            <div>Base Kilometer <span class="info-icon" title="The base distance covered by the base fare">ⓘ</span></div>
                            <div>Additional Fare <span class="info-icon" title="The extra charge per kilometer after the base distance is exceeded">ⓘ</span></div>
                        </div>
                    </div>
                <div style="width: 80px;"></div> <!-- Spacer for edit button column 100-->
            </div>
            
            <div class="fare-content">
                @foreach (var v in Model.Vehicles)
                {
                    <div class="vehicle-row" data-vehicle-id="@v.VehicleId">
                        <div class="vehicle-icon @v.Name.ToLower().Replace(" ", "-")"></div>
                        <div class="vehicle-name">@v.Name</div>
                        <div class="fare-inputs">
                            <div class="fare-input">
                                <input type="number" value="@v.BaseFare" disabled data-type="base">
                            </div>
                            <div class="fare-input">
                                <input type="number" value="@v.BaseKm" disabled data-type="km">
                            </div>
                            <div class="fare-input">
                                <input type="number" value="@v.AdditionalFare" disabled data-type="additional">
                            </div>
                        </div>
                        <button class="edit-btn" onclick="toggleFareEdit(this)">Edit Fare</button>
                    </div>
                }
            </div>
        </div>

@section Scripts{
    <script>
        function toggleFareEdit(button) {
            const row = button.closest('.vehicle-row');
            const inputs = row.querySelectorAll('.fare-inputs input');
            const vehicleId = row.getAttribute('data-vehicle-id');
            if (button.textContent === 'Edit Fare') {
                // Enable editing
                inputs.forEach(input => {
                    input.disabled = false;
                });
                button.textContent = 'Save Fare';
                button.style.background = '#f59e0b';
            } else {
                // Save and disable editing
                const baseFare = parseFloat(inputs[0].value);
                const baseKm = parseFloat(inputs[1].value);
                const additionalFare = parseFloat(inputs[2].value);
                fetch(`@Url.Page("/admin", "UpdateFare")`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ id: vehicleId, baseFare, baseKm, additionalFare })
                })
                .then(res => {
                    if (!res.ok) throw new Error('Network response was not ok');
                    return res.text();
                })
                .then(text => {
                    let data = {};
                    try { data = JSON.parse(text); } catch (e) { throw new Error('Invalid JSON response'); }
                    if (data.success) {
                        inputs.forEach(input => { input.disabled = true; });
                        button.textContent = 'Edit Fare';
                        button.style.background = '#10b981';
                        alert('Fare updated!');
                    } else {
                        alert('Failed to update fare.');
                    }
                })
                .catch(err => {
                    alert('Error updating fare: ' + err.message);
                });
            }
        }
    </script>
}